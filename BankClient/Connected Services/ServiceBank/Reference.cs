//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankClient.ServiceBank {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerUser", Namespace="http://schemas.datacontract.org/2004/07/BankService")]
    [System.SerializableAttribute()]
    public partial class ServerUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Money {
            get {
                return this.MoneyField;
            }
            set {
                if ((this.MoneyField.Equals(value) != true)) {
                    this.MoneyField = value;
                    this.RaisePropertyChanged("Money");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/BankService")]
    [System.SerializableAttribute()]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneFromField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Money {
            get {
                return this.MoneyField;
            }
            set {
                if ((this.MoneyField.Equals(value) != true)) {
                    this.MoneyField = value;
                    this.RaisePropertyChanged("Money");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneFrom {
            get {
                return this.TelephoneFromField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneFromField, value) != true)) {
                    this.TelephoneFromField = value;
                    this.RaisePropertyChanged("TelephoneFrom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceBank.IServiceBank", CallbackContract=typeof(BankClient.ServiceBank.IServiceBankCallback))]
    public interface IServiceBank {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/SignUp", ReplyAction="http://tempuri.org/IServiceBank/SignUpResponse")]
        bool SignUp(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/SignUp", ReplyAction="http://tempuri.org/IServiceBank/SignUpResponse")]
        System.Threading.Tasks.Task<bool> SignUpAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/LogIn", ReplyAction="http://tempuri.org/IServiceBank/LogInResponse")]
        BankClient.ServiceBank.ServerUser LogIn([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/LogIn", ReplyAction="http://tempuri.org/IServiceBank/LogInResponse")]
        System.Threading.Tasks.Task<BankClient.ServiceBank.ServerUser> LogInAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/LogOut")]
        void LogOut(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/LogOut")]
        System.Threading.Tasks.Task LogOutAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/AddMoney", ReplyAction="http://tempuri.org/IServiceBank/AddMoneyResponse")]
        string AddMoney(int id, double money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/AddMoney", ReplyAction="http://tempuri.org/IServiceBank/AddMoneyResponse")]
        System.Threading.Tasks.Task<string> AddMoneyAsync(int id, double money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/WithdrawMoney", ReplyAction="http://tempuri.org/IServiceBank/WithdrawMoneyResponse")]
        string WithdrawMoney(int id, double money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/WithdrawMoney", ReplyAction="http://tempuri.org/IServiceBank/WithdrawMoneyResponse")]
        System.Threading.Tasks.Task<string> WithdrawMoneyAsync(int id, double money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/MoneyTransfer", ReplyAction="http://tempuri.org/IServiceBank/MoneyTransferResponse")]
        string MoneyTransfer(int idFrom, string TelephoneTo, double money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/MoneyTransfer", ReplyAction="http://tempuri.org/IServiceBank/MoneyTransferResponse")]
        System.Threading.Tasks.Task<string> MoneyTransferAsync(int idFrom, string TelephoneTo, double money);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBankCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/GettingMoney", ReplyAction="http://tempuri.org/IServiceBank/GettingMoneyResponse")]
        void GettingMoney(BankClient.ServiceBank.Transaction transaction);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBankChannel : BankClient.ServiceBank.IServiceBank, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBankClient : System.ServiceModel.DuplexClientBase<BankClient.ServiceBank.IServiceBank>, BankClient.ServiceBank.IServiceBank {
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool SignUp(string login, string password) {
            return base.Channel.SignUp(login, password);
        }
        
        public System.Threading.Tasks.Task<bool> SignUpAsync(string login, string password) {
            return base.Channel.SignUpAsync(login, password);
        }
        
        public BankClient.ServiceBank.ServerUser LogIn(string login1, string password) {
            return base.Channel.LogIn(login1, password);
        }
        
        public System.Threading.Tasks.Task<BankClient.ServiceBank.ServerUser> LogInAsync(string login, string password) {
            return base.Channel.LogInAsync(login, password);
        }
        
        public void LogOut(int id) {
            base.Channel.LogOut(id);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(int id) {
            return base.Channel.LogOutAsync(id);
        }
        
        public string AddMoney(int id, double money) {
            return base.Channel.AddMoney(id, money);
        }
        
        public System.Threading.Tasks.Task<string> AddMoneyAsync(int id, double money) {
            return base.Channel.AddMoneyAsync(id, money);
        }
        
        public string WithdrawMoney(int id, double money) {
            return base.Channel.WithdrawMoney(id, money);
        }
        
        public System.Threading.Tasks.Task<string> WithdrawMoneyAsync(int id, double money) {
            return base.Channel.WithdrawMoneyAsync(id, money);
        }
        
        public string MoneyTransfer(int idFrom, string TelephoneTo, double money) {
            return base.Channel.MoneyTransfer(idFrom, TelephoneTo, money);
        }
        
        public System.Threading.Tasks.Task<string> MoneyTransferAsync(int idFrom, string TelephoneTo, double money) {
            return base.Channel.MoneyTransferAsync(idFrom, TelephoneTo, money);
        }
    }
}
